# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET         /                                       controllers.UserController.renderDashboard
GET         /user                                   controllers.UserController.renderDashboard
GET         /user/edit                              controllers.UserController.renderEdit
GET         /user/:id                               controllers.UserController.renderUser(id: Long)
POST        /user/update                            controllers.UserController.processUpdate(id: Long)

GET         /exercises                              controllers.ExerciseController.renderList(page:Int ?= 0, sort:Int ?=1, title ?= "", tags ?="")
GET         /exercises                              controllers.ExerciseController.renderOverview
GET         /exercises/create                       controllers.ExerciseController.renderCreate
GET         /exercises/:id/edit                     controllers.ExerciseController.renderEdit(id: Long)
GET         /exercises/:id/delete                   controllers.ExerciseController.processDelete(id: Long)
GET         /exercises/:id/undoDelete               controllers.ExerciseController.processUndo(id: Long)
GET         /exercises/:id                          controllers.ExerciseController.renderDetail(id: Long)

POST        /exercises/create                       controllers.ExerciseController.processCreate
POST        /exercises/:id/update                   controllers.ExerciseController.processUpdate(id: Long)
POST        /exercises/:id/upvote                   controllers.ExerciseController.processUpvote(id: Long)
POST        /exercises/:id/downvote                 controllers.ExerciseController.processDownvote(id: Long)

GET         /solutions/:id/edit                     controllers.SolutionController.renderUpdate(id: Long)
GET         /solutions/:id/delete                   controllers.SolutionController.processDelete(id: Long)
GET         /solutions/:id/undoDelete               controllers.SolutionController.processUndo(id: Long)
GET         /exercises/:id/solution/create          controllers.SolutionController.renderCreate(id: Long)
POST        /solutions/:id/update                   controllers.SolutionController.processUpdate(id: Long)
POST        /solutions/:id/upvote                   controllers.SolutionController.processUpvote(id: Long)
POST        /solutions/:id/downvote                 controllers.SolutionController.processDownvote(id: Long)
POST        /exercises/:id/solution/create          controllers.SolutionController.processCreate(id: Long)

GET         /comment/:id/delete                   controllers.CommentController.processDelete(id: Long)
GET         /comment/:id/undoDelete               controllers.CommentController.processUndo(id: Long)
POST        /exercises/:id/updateComment            controllers.CommentController.processUpdate(id: Long)
POST        /exercises/:id/solution/comment/create  controllers.CommentController.processCreateSolutionComment(id: Long)
POST        /exercises/:id/comment/create           controllers.CommentController.processCreateExerciseComment(id: Long)

GET         /tags                                   controllers.TagController.renderTagList(sort:Int ?= 1, tags ?= "")
GET         /tags                                   controllers.TagController.renderOverview
GET         /tags/query                             controllers.TagController.processTagNameQuery(q ?= "")
POST        /tags/track                             controllers.TagController.processTrack(tagId: Long)

GET         /login                                  controllers.LoginController.renderLogin
GET         /register                               controllers.LoginController.renderRegister(username ?= "", email ?= "")
POST        /register                               controllers.LoginController.processRegister
POST        /login                                  controllers.LoginController.processLogin
POST        /logout                                 controllers.LoginController.processLogout

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)
