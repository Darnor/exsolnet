# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET         /                               controllers.UserController.renderDashboard
GET         /user                           controllers.UserController.renderDashboard
GET         /user/edit                      controllers.UserController.renderEdit
GET         /user/:id                       controllers.UserController.renderUser(id: Long)
POST        /user/update                    controllers.UserController.processUpdate(id: Long)

GET         /exercises                      controllers.ExerciseController.renderList(page:Int ?= 0, sort:Int ?=1, title ?= "", tags ?="")
GET         /exercises                      controllers.ExerciseController.renderOverview
GET         /exercises/create               controllers.ExerciseController.renderCreate
GET         /exercises/:id/edit             controllers.ExerciseController.renderEdit(id: Long)
POST        /exercises/create               controllers.ExerciseController.processCreate
POST        /exercises/:id/update           controllers.ExerciseController.processUpdate(id: Long)
POST        /exercises/:id/upvote           controllers.ExerciseController.upVote(id: Long)
POST        /exercises/:id/downvote         controllers.ExerciseController.downVote(id: Long)
GET        /exercises/:id/delete           controllers.ExerciseController.delete(id: Long)

GET         /exercises/:id                  controllers.ExerciseDetailController.renderExerciseDetail(id: Long)
GET         /exercises/:id/createsolution   controllers.ExerciseDetailController.renderCreateSolution(id: Long)
POST        /exercises/:id/solution         controllers.ExerciseDetailController.processUpdate(id: Long)

POST        /solutions/:id/upvote           controllers.SolutionController.upVote(id: Long)
POST        /solutions/:id/downvote         controllers.SolutionController.downVote(id: Long)

GET         /tags                           controllers.TagController.renderTagList(sort:Int ?= 1, tags ?= "")
GET         /tags                           controllers.TagController.renderOverview
GET         /tags/query                     controllers.TagController.suggestTags(q ?= "")
POST        /tags/track                     controllers.TagController.processTrack(tagId: Long)

GET         /login                          controllers.LoginController.renderLogin
GET         /register                       controllers.LoginController.renderRegister
POST        /register                       controllers.LoginController.processRegister
POST        /login                          controllers.LoginController.login
POST        /logout                         controllers.LoginController.logout

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
